{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\auris\\\\Desktop\\\\Udemy ReLearn\\\\Router_Project\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventDetail.js\",\n  _s = $RefreshSig$();\nimport { redirect, useRouteLoaderData, Await } from 'react-router-dom';\nimport EventItem from '../components/EventItem';\nimport EventsList from '../components/EventsList';\nimport { Suspense } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const {\n    event,\n    events\n  } = useRouteLoaderData('event-detail');\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: event,\n        children: loadedEvent => /*#__PURE__*/_jsxDEV(EventItem, {\n          event: loadedEvent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: \"Loading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 29\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Await, {\n        resolve: events,\n        children: loadedEvents => /*#__PURE__*/_jsxDEV(EventsList, {\n          events: loadedEvents\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 34\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(EventDetailPage, \"RYHFM3+vnAtCT3vK8ii1+i0+Nsk=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nasync function loadEvent(id) {\n  const response = await fetch('http://localhost:8080/events/' + id);\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch details for the event.'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nasync function loadEvents() {\n  const response = await fetch('http://localhost:8080/events');\n  if (!response.ok) {\n    // return { isError: true, message: 'Could not fetch events'}\n    throw new Response(JSON.stringify({\n      message: 'Could not fetch events.'\n    }), {\n      status: 500\n    });\n  } else {\n    const resData = await response.json();\n    return resData.events;\n  }\n}\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  return {\n    event: loadEvent(id),\n    events: loadEvents()\n  };\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw new Response(JSON.stringify({\n      message: 'Could not delete event.'\n    }), {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["redirect","useRouteLoaderData","Await","EventItem","EventsList","Suspense","jsxDEV","_jsxDEV","Fragment","_Fragment","EventDetailPage","_s","event","events","children","fallback","style","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","resolve","loadedEvent","loadedEvents","_c","loadEvent","id","response","fetch","ok","Response","JSON","stringify","message","status","resData","json","loadEvents","loader","request","params","eventId","action","method","$RefreshReg$"],"sources":["C:/Users/auris/Desktop/Udemy ReLearn/Router_Project/12-adv-starting-project/frontend/src/pages/EventDetail.js"],"sourcesContent":["import { redirect, useRouteLoaderData, Await } from 'react-router-dom'\r\nimport EventItem from '../components/EventItem'\r\nimport EventsList from '../components/EventsList';\r\nimport { Suspense } from 'react';\r\n\r\nfunction EventDetailPage() {\r\n    const { event, events } = useRouteLoaderData('event-detail');\r\n\r\n    return (\r\n        <>\r\n        <Suspense fallback={<p style={{textAlign: 'center'}}>Loading</p>}>\r\n            <Await resolve={event}>\r\n                {loadedEvent => <EventItem event={loadedEvent} />}\r\n            </Await>\r\n        </Suspense>\r\n        <Suspense fallback={<p style={{textAlign: 'center'}}>Loading</p>}>\r\n            <Await resolve={events}>\r\n                {loadedEvents => <EventsList events={loadedEvents} />}\r\n            </Await>\r\n        </Suspense>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default EventDetailPage;\r\n\r\nasync function loadEvent(id) {\r\n    const response = await fetch('http://localhost:8080/events/' + id);\r\n\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch details for the event.' }), {\r\n            status: 500,\r\n        });\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events;\r\n    }\r\n}\r\n\r\nasync function loadEvents() {\r\n    const response = await fetch('http://localhost:8080/events');\r\n\r\n    if (!response.ok) {\r\n        // return { isError: true, message: 'Could not fetch events'}\r\n        throw new Response(JSON.stringify({ message: 'Could not fetch events.' }), {\r\n            status: 500,\r\n        });\r\n    } else {\r\n        const resData = await response.json();\r\n        return resData.events;\r\n\r\n    }\r\n}\r\n\r\nexport async function loader({ request, params }) {\r\n    const id = params.eventId\r\n\r\n    return {\r\n        event: loadEvent(id),\r\n        events: loadEvents()\r\n    }\r\n}\r\n\r\nexport async function action({ params, request }) {\r\n    const eventId = params.eventId;\r\n    const response = await fetch('http://localhost:8080/events/' + eventId, {\r\n        method: request.method,\r\n    })\r\n    if (!response.ok) {\r\n        throw new Response(JSON.stringify({ message: 'Could not delete event.' }), {\r\n            status: 500,\r\n        });\r\n    }\r\n    return redirect('/events');\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}